<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freessrnode.github.io/news/article-44567.htm" />
    <title>Eureka注册中心高可用及常用配置项</title>
        <meta name="description" content="一、Eureka 的高可用搭建  二、Eureka 的安全认证  三、Eureka 的常用配置项 目录  			  一、Eureka 的高可用搭建 　　在实际生产项目中，为了保证服务的可用性，连续性，" />
        <link rel="icon" href="/assets/website/img/freessrnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeSSRNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freessrnode.github.io/news/article-44567.htm" />
    <meta property="og:site_name" content="FreeSSRNode免费节点官网" />
    <meta property="og:title" content="Eureka注册中心高可用及常用配置项" />
    <meta property="og:image" content="https://freessrnode.github.io/uploads/20240813/8562702d5886a3d9aad98d3475cc4030.webp" />
        <meta property="og:release_date" content="2025-01-22T10:13:46" />
    <meta property="og:updated_time" content="2025-01-22T10:13:46" />
        <meta property="og:description" content="一、Eureka 的高可用搭建  二、Eureka 的安全认证  三、Eureka 的常用配置项 目录  			  一、Eureka 的高可用搭建 　　在实际生产项目中，为了保证服务的可用性，连续性，" />
        
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Eureka注册中心高可用及常用配置项">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Muli:300,400,700,900" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap-datepicker.css">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/aos.css">
    <link href="/assets/website/css/freessrnode/jquery.mb.YTPlayer.min.css" media="all" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2KPLB94DVG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-2KPLB94DVG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300" data-page="detail">
    <div class="site-wrap">
                <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <div class="py-2 bg-light">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-9 d-none d-lg-block">
                        
                    </div>
                </div>
            </div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="d-flex align-items-center">
                    <div class="site-logo">
                        <a href="/" class="d-block">
                                                <span>Free SSR Node</span>
                                                </a>
                    </div>
                    <div class="mr-auto">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block">
                                                                <li>
                                    <a href="/" class="nav-link text-left">首页</a>
                                </li>
                                                                <li>
                                    <a href="/free-nodes/" class="nav-link text-left">免费节点</a>
                                </li>
                                                                <li>
                                    <a href="/paid-subscribe/" class="nav-link text-left">推荐机场</a>
                                </li>
                                                                <li>
                                    <a href="/client.htm" class="nav-link text-left">客户端</a>
                                </li>
                                                                <li>
                                    <a href="/news/" class="nav-link text-left">新闻资讯</a>
                                </li>
                                                            </ul>
                        </nav>
                    </div>
                    <div class="ml-auto">
                        <div class="social-wrap">
                            <a href="#"><span class="icon-facebook"></span></a>
                            <a href="#"><span class="icon-twitter"></span></a>
                            <a href="#"><span class="icon-linkedin"></span></a>
                            <a href="#" class="d-inline-block d-lg-none site-menu-toggle js-menu-toggle text-black"><span class="icon-menu h3"></span></a>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <div class="intro-section small" style="background-image: url('/assets/website/img/freessrnode/hero_1.jpg');">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-md-7 mx-auto text-center" data-aos="fade-up">
                        <div class="intro">
                            <h1>Eureka注册中心高可用及常用配置项</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="site-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="SSR Windows免费节点订阅站" data-url="https://ssrwindows.github.io">
                  				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> <a href="#title-0" title="一、Eureka 的高可用搭建">一、Eureka 的高可用搭建</a></li> <li><i class="be be-arrowright"></i> <a href="#title-1" title="二、Eureka 的安全认证">二、Eureka 的安全认证</a></li> <li><i class="be be-arrowright"></i> <a href="#title-2" title="三、Eureka 的常用配置项">三、Eureka 的常用配置项</a></li> </ul><span class="log-zd"><span class="log-close"><a title="隐藏目录"><i class="be be-cross"></i><strong>目录</strong></a></span></span></div>  			</div> <div id="content_views" class="markdown_views prism-atom-one-dark"> <span class="directory"></span><h4 id="title-0">一、Eureka 的高可用搭建</h4> <p>　　在实际生产项目中，为了保证服务的可用性，连续性，一般来说，都会去搭建应用的集群来保证服务高可用。Eureka 是天生集群的，搭建配置相当简单：不论你有多少的机器部署，只要相互之间指定对方的注册中心地址就可以了。无需更多的配置项，方便，快捷。</p> <p>　　有几台机器部署 Eureka，就相互注册下关系，多个 Eureka Server 之间通过复制的方式完成注册服务的同步。本文中使用两个节点来进行模拟使用，如果三台或者更多机器的话，同理可配置。</p> <p><strong>1、创建配置文件</strong></p> <p>　 新增配置文件：application-ha02.properties、application-ha03.properties</p> <p>　application-ha02.properties 配置如下</p> <pre><code class="prism language-bash">server.port<span class="token operator">=</span><span class="token number">8082</span> spring.application.name<span class="token operator">=</span>nativeEureka eureka.environment<span class="token operator">=</span>ha02  eureka.instance.hostname<span class="token operator">=</span>server2<span class="token comment">#是否将自己作为客户端注册到注册中心：false-不注册。默认为true。集群搭建中，设置true</span> eureka.client.register-with-eureka<span class="token operator">=</span>true<span class="token comment">#是否需要从注册中心检索获取服务的注册信息。默认值为true</span><span class="token comment">#单机版的可设置成false，集群版的由于需要同步其他节点的服务注册数据，故设成true。</span> eureka.client.fetch-registry<span class="token operator">=</span>true<span class="token comment">#是否开启自我保护模式，默认值true</span><span class="token comment">#eureka server默认在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，</span><span class="token comment">#但是在保护期内如果服务刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，此时会调用失败</span> eureka.server.enable-self-preservation<span class="token operator">=</span>false<span class="token comment">#扫描失效服务的间隔时间，单位毫秒，默认值 60 * 1000</span> eureka.server.eviction-interval-timer-in-ms<span class="token operator">=</span><span class="token number">10000</span><span class="token comment">#服务地址</span> eureka.client.service-url.defaultZone<span class="token operator">=</span> http://server3:8083/eureka/</code></pre> <p>　application-ha03.properties 配置如下</p> <pre><code class="prism language-bash">server.port<span class="token operator">=</span><span class="token number">8083</span> spring.application.name<span class="token operator">=</span>nativeEureka eureka.environment<span class="token operator">=</span>ha03  eureka.instance.hostname<span class="token operator">=</span>server3<span class="token comment">#是否将自己作为客户端注册到注册中心：false-不注册。默认为true。集群搭建中，设置true</span> eureka.client.register-with-eureka<span class="token operator">=</span>true<span class="token comment">#是否需要从注册中心检索获取服务的注册信息。默认值为true</span><span class="token comment">#单机版的可设置成false，集群版的由于需要同步其他节点的服务注册数据，故设成true。</span> eureka.client.fetch-registry<span class="token operator">=</span>true<span class="token comment">#是否开启自我保护模式，默认值true</span><span class="token comment">#eureka server默认在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，</span><span class="token comment">#但是在保护期内如果服务刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，此时会调用失败</span> eureka.server.enable-self-preservation<span class="token operator">=</span>false<span class="token comment">#扫描失效服务的间隔时间，单位毫秒，默认值 60 * 1000</span> eureka.server.eviction-interval-timer-in-ms<span class="token operator">=</span><span class="token number">10000</span><span class="token comment">#服务地址</span> eureka.client.service-url.defaultZone<span class="token operator">=</span> http://server2:8082/eureka/</code></pre> <p>　　其中，server2、server3 为修改本地 hosts 文件。</p> <p><strong>2、分别启动服务</strong></p> <p>&nbsp;　　　　启动类&nbsp;NativeEurekaApplication 中，修改加载配置文件，分别应用 ha02 、ha03 配置文件，组建高可用：</p> <pre><code class="prism language-bash">package com.cfang<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.boot.SpringApplication<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.boot.autoconfigure.SpringBootApplication<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.context.annotation.Profile<span class="token punctuation">;</span>  @SpringBootApplication @EnableEurekaServer public class NativeEurekaApplication<span class="token punctuation">{<!-- --></span>      public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> //        SpringApplication.run<span class="token punctuation">(</span>NativeEurekaApplication.class, args<span class="token punctuation">)</span><span class="token punctuation">;</span>         SpringApplication application<span class="token operator">=</span> new SpringApplication<span class="token punctuation">(</span>NativeEurekaApplication.class<span class="token punctuation">)</span><span class="token punctuation">;</span> //        application.setAdditionalProfiles<span class="token punctuation">(</span><span class="token string">"ha02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         application.setAdditionalProfiles<span class="token punctuation">(</span><span class="token string">"ha03"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         application.run<span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>　　上面代码中，两次分别启动 ha02 和 ha03，启动两个 Eureka 注册中心。</p> <p>　　在单节点启动的时候，会持续报错&nbsp;&nbsp;Cannot execute request on any known server、Caused by: java.net.ConnectException: Connection refused: connect。此类异常消息，是因为向集群中其他 Eureka 注册服务时候，因为未开启而报错。正常可忽略，待后续逐步启动了所有 Eureka 服务后，此异常会解决消失。</p> <p><strong>3、控制台查看</strong></p> <p>　　启动好后，在 Eureka 控制台中可查看，分别访问：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8082/"  rel="nofollow">http://server2:8082/</a>、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://server3:8083/"  rel="nofollow">http://server3:8083/</a></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220901/4c6e12482170b8c456c2f31fc219c580.jpg" alt="Eureka注册中心高可用及常用配置项"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220901/089c19a87bd9ad0398b019dee8330a45.jpg" alt="Eureka注册中心高可用及常用配置项"></p> <p>&nbsp;　　从上面可以看出，DS Replicas、registered-replicas、available-replicas分别有了其他 Eureka 的地址，即：相互Replicate、相互注册，则说明Eureka集群成功。</p> <p><strong>4、客户端使用</strong></p> <p>　　客户端使用过程中，只需要修改配置文件中的注册中心地址就行了：</p> <pre><code class="prism language-bash">eureka.client.service-url.defaultZone<span class="token operator">=</span> http://server2:8082/eureka/,http://server3:8083/eureka/</code></pre> <p>　　有几个 Eureka 提供服务，就在后面加上就行了。重启服务，则在所有的 Eureka 上都能查看到服务注册信息。</p> <span class="directory"></span><h4 id="title-1">二、Eureka 的安全认证</h4> <p>　　Eureka 可以增加使用 用户名 和 密码 的方式进行安全访问验证。有点类似 ActiveMQ 的用户名密码认证。</p> <p><strong>1、开启认证</strong></p> <p><strong></strong>Eureka 注册中心项目&nbsp;nativeEureka 中，增加 pom 依赖：</p> <pre><code class="prism language-bash"><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org.springframework.boot<span class="token operator">&lt;</span>/groupId<span class="token operator">&gt;</span><span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring-boot-starter-security<span class="token operator">&lt;</span>/artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/dependency<span class="token operator">&gt;</span></code></pre> <p>　　新增config</p> <pre><code class="prism language-bash">package com.cfang.configuration<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.context.annotation.Configuration<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity<span class="token punctuation">;</span><span class="token function">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter<span class="token punctuation">;</span>  @EnableWebSecurity @Configuration public class WebSecurityConfig extends WebSecurityConfigurerAdapter<span class="token punctuation">{<!-- --></span>      @Override     protected void configure<span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> throws Exception<span class="token punctuation">{<!-- --></span>         super.configure<span class="token punctuation">(</span>http<span class="token punctuation">)</span><span class="token punctuation">;</span>         http.csrf<span class="token punctuation">(</span><span class="token punctuation">)</span>.disable<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //关闭csrf过滤         http.authorizeRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>.anyRequest<span class="token punctuation">(</span><span class="token punctuation">)</span>.authenticated<span class="token punctuation">(</span><span class="token punctuation">)</span>.and<span class="token punctuation">(</span><span class="token punctuation">)</span>.httpBasic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>　　修改配置文件&nbsp;application.properties</p> <pre><code class="prism language-bash">server.port<span class="token operator">=</span><span class="token number">8081</span> spring.application.name<span class="token operator">=</span>nativeEureka  eureka.instance.hostname<span class="token operator">=</span> server1<span class="token comment">#是否将自己作为客户端注册到注册中心：false-不注册。默认为true。</span> eureka.client.register-with-eureka<span class="token operator">=</span>false<span class="token comment">#是否需要从注册中心检索获取服务的注册信息。默认值为true</span><span class="token comment">#单机版的可设置成false，集群版的由于需要同步其他节点的服务注册数据，故设成true。</span> eureka.client.fetch-registry<span class="token operator">=</span>false<span class="token comment">#是否开启自我保护模式，默认值true</span><span class="token comment">#eureka server默认在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，</span><span class="token comment">#但是在保护期内如果服务刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，此时会调用失败</span> eureka.server.enable-self-preservation<span class="token operator">=</span>false<span class="token comment">#扫描失效服务的间隔时间，单位毫秒，默认值 60 * 1000</span> eureka.server.eviction-interval-timer-in-ms<span class="token operator">=</span><span class="token number">10000</span><span class="token comment">#安全认证信息</span> security.basic.enabled<span class="token operator">=</span>true spring.security.user.name<span class="token operator">=</span>root spring.security.user.password<span class="token operator">=</span><span class="token number">123456</span><span class="token comment">#服务地址</span> eureka.client.service-url.defaultZone<span class="token operator">=</span> http://<span class="token variable">${spring.security.user.name}</span><span class="token builtin class-name">:</span><span class="token variable">${spring.security.user.password}</span>@server1:8081/eureka/</code></pre> <p>　　主要修改增加安全认证信息。</p> <p>　　完成以上几个步骤后，启动 Eureka 注册中心，访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://server1:8081/"  rel="nofollow">http://server1:8081/</a>。会弹出输入用户名、密码：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220901/a8d1014746c12eee74256de1ba3ca8f1.jpg" alt="Eureka注册中心高可用及常用配置项"></p> <p>&nbsp;　　输入配置文件中配置的用户名、密码后，登入 Eureka 控制台。</p> <p><strong>2、Eureka client 端修改</strong></p> <p>　　　　client 端，只需要修改配置文件，在注册的时候的地址信息就好了，带上认证信息：</p> <pre><code class="prism language-bash">server.port<span class="token operator">=</span><span class="token number">8701</span> spring.application.name<span class="token operator">=</span>nativefshService<span class="token comment">#是否将自己作为客户端注册到注册中心：false-不注册</span> eureka.client.register-with-eureka<span class="token operator">=</span>true<span class="token comment">#安全认证信息</span> spring.security.user.name<span class="token operator">=</span>root spring.security.user.password<span class="token operator">=</span><span class="token number">123456</span><span class="token comment">#服务地址</span><span class="token comment">#eureka.client.service-url.defaultZone= http://server2:8082/eureka/,http://server3:8083/eureka/</span> eureka.client.service-url.defaultZone<span class="token operator">=</span> http://<span class="token variable">${spring.security.user.name}</span><span class="token builtin class-name">:</span><span class="token variable">${spring.security.user.password}</span>@server1:8081/eureka/</code></pre> <p>　　如果用户名、密码配置不正确的话，服务注册失败，会报错：com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server 。</p> <span class="directory"></span><h4 id="title-2">三、Eureka 的常用配置项</h4> <p><strong>　　1、通用配置</strong></p> <p>　　　　spring.application.name=xxxxxxxxxxxxx ：应用名称配置，将会出现在 Eureka 注册中心 Application 列</p> <p>　　　　server.port=8701 ：应用端口，默认值为 8761</p> <p>　　　　eureka.instance.hostname= server1 ：服务注册中心应用实例主机名</p> <p>　　　　eureka.<span class="hljs-keyword">instance.ip-address=1<span class="hljs-number">27.0<span class="hljs-number">.0<span class="hljs-number">.1 ：应用实例ip</span></span></span></span></p> <p><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"><span class="hljs-number">　　　　eureka.<span class="hljs-keyword">instance.prefer-ip-address=false ：</span></span></span></span></span>客户端向注册中心注册时，相较于 hostname 是否有限使用 ip。在服务中心注册后，鼠标放到服务的&nbsp;Status 列的链接上，无需点击，左下角能看出配置的变化。</p> <p>　　　　eureka.instance.environment=dev ：该实例的环境配置</p> <p>　　　　eureka.client.register-with-eureka=false ：是否将自己注册到 Eureka 注册中心。单机情况下的 Eureka Server 不需要注册，集群的 Eureka Server 以及 Eureka Client 需要注册。默认值 true</p> <p>　　　　eureka.client.fetch-registry=false ：是否需要从注册中心检索获取服务的注册信息。单机情况下的 Eureka Server 不需要获取。集群的 Eureka Server 以及 Eureka Client 需要获取。默认值 true</p> <p>　　　　eureka.client.service-url.defaultZone= http://${spring.security.user.name}:${spring.security.user.password}@server1:8081/eureka/ ：Eureka 服务的地址信息，中间的占位符为安全认证开启时使用，如果 Eureka Server 为集群状态，则逗号分隔，依次书写即可。</p> <p><strong>2、Eureka Server 配置</strong></p> <p>　　　　eureka.server.enable-self-preservation = false ：是否开启自我保护模式，eureka server默认在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，但是在保护期内如果服务刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，此时会调用失败。默认 true</p> <p>　　　　eureka.server.eviction-interval-timer-in-ms=10000 ：扫描失效服务的时间间隔。单位 毫秒。 默认值 60 * 1000</p> <p>　　　　security.basic.enabled=true ：开启 Eureka 安全认证</p> <p>　　　　spring.security.user.name=root ：安全认证用户名</p> <p>　　　　spring.security.user.password=123456 ：安全认证密码</p> <p><strong>3、Eureka Client 配置</strong></p> <p>　　　　eureka.client.registry-fetch-interval-seconds=30 ：客户端获取服务注册信息时间间隔，单位 秒。默认 30</p> <p><span class="hljs-title">eureka.<span class="hljs-keyword">instance.appname=eureka-client ：服务名，默认取 spring.application.name 配置值，如果没有则为 unknown</span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title">eureka.<span class="hljs-keyword">instance.lease-expiration-duration-<span class="hljs-keyword">in-seconds=<span class="hljs-number">90 ：服务的失效时间，失效的服务将被注册中心删除。时间间隔为最后一次注册中心接收到的心跳时间。单位 秒，默认 90</span></span></span></span></span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title">eureka.<span class="hljs-keyword">instance.lease-renewal-interval-<span class="hljs-keyword">in-seconds=<span class="hljs-number">30 ：应用实例给注册中心发送心跳的间隔时间，用于表明该服务实例可用。单位 秒。默认30</span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></p> <p><em><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></em><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number">eureka.client.eureka-server-connect-timeout-seconds=5 ：client 连接 Eureka 注册中心的超时时间，单位 秒，默认 5</span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number">eureka.client.eureka-server-read-timeout-seconds=</span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number">8 ：client 对 Eureka 服务器读取信息的超时时间，单位 秒，默认 8</span></span></span></span></span></span></span></span></span></span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number">　　　　eureka.client.eureka-connection-idle-timeout-seconds=30 ：client 连接 Eureka 服务端后空闲等待时间，单位 秒，默认 30</span></span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number">eureka.client.eureka-server-total-connections=</span></span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"><span class="hljs-number">200 ：client 到 所有Eureka 服务端的连接总数，默认 200</span></span></span></span></span></span></span></span></span></span></span></span><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"><span class="hljs-number"></span></span></span></span></span></span></span></span></span></span></span></span></p> <p><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-title"><span class="hljs-keyword"><span class="hljs-keyword"><span class="hljs-number"><span class="hljs-number"><span class="hljs-number">　　　　eureka.client.eureka-server-total-connections-per-host=<span class="hljs-number">50 ：client 到 Eureka 单服务端的连接总数，默认 50</span></span></span></span></span></span></span></span></span></span></span></span></span></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-44566.htm">python小项目&#8211;2048游戏</a></p>
                                        <p>下一个：<a href="/news/article-45064.htm">开宠物店怎么运营好（开宠物店的经验过程）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-59343.htm" title="动物疫苗使用注意事项有哪些 动物疫苗使用注意事项有哪些呢">动物疫苗使用注意事项有哪些 动物疫苗使用注意事项有哪些呢</a></li>
                        <li class="py-2"><a href="/news/article-36113.htm" title="做动物疫苗的上市公司名单最新（带状疱疹疫苗生产上市公司名单）">做动物疫苗的上市公司名单最新（带状疱疹疫苗生产上市公司名单）</a></li>
                        <li class="py-2"><a href="/news/article-55950.htm" title="动物疫苗使用的注意事项 动物疫苗使用的注意事项有哪些">动物疫苗使用的注意事项 动物疫苗使用的注意事项有哪些</a></li>
                        <li class="py-2"><a href="/news/article-58198.htm" title="人打动物疫苗多少钱一针 人打动物疫苗多少钱一针啊">人打动物疫苗多少钱一针 人打动物疫苗多少钱一针啊</a></li>
                        <li class="py-2"><a href="/news/article-62265.htm" title="vue3搭配pinia的踩坑实战记录_vue.js">vue3搭配pinia的踩坑实战记录_vue.js</a></li>
                        <li class="py-2"><a href="/news/article-48012.htm" title="被猫抓了怎样算破皮了（被猫抓了怎样算出血）">被猫抓了怎样算破皮了（被猫抓了怎样算出血）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-hiddify-next-node-github.htm" title="「1月28日」最高速度18.6M/S，2025年SSR/V2ray/Shadowrocket/Clash每天更新免费机场订阅节点链接">「1月28日」最高速度18.6M/S，2025年SSR/V2ray/Shadowrocket/Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-58798.htm" title="动物疫苗上市公司排名前十名有哪些（动物疫苗上市a股龙头）">动物疫苗上市公司排名前十名有哪些（动物疫苗上市a股龙头）</a></li>
                        <li class="py-2"><a href="/news/article-49521.htm" title="济南美联众合动物医院怎么样知乎推荐（美联众合动物医院地址）">济南美联众合动物医院怎么样知乎推荐（美联众合动物医院地址）</a></li>
                        <li class="py-2"><a href="/news/article-59920.htm" title=".NET 程序读取当前目录避坑指南">.NET 程序读取当前目录避坑指南</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <div class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">FreeSSRNode免费节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
      <!-- loader -->
      <div id="loader" class="show fullscreen">
          <svg class="circular" width="48px" height="48px">
              <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
              <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#51be78" />
          </svg>
      </div>
      <script src="/assets/website/js/frontend/freessrnode/jquery-3.5.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-migrate-3.0.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-ui.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/popper.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/owl.carousel.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.stellar.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.countdown.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap-datepicker.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.easing.1.3.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/aos.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.fancybox.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.sticky.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.mb.YTPlayer.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/main.js"></script>
      <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
      <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- .site-wrap -->
</body>

</html>