<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freessrnode.github.io/news/article-105559.htm" />
    <title>在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</title>
        <meta name="description" content="在python中连接hive和impala有很多中方式，有pyhive,impyla,pyspark,ibis等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerber" />
        <link rel="icon" href="/assets/website/img/freessrnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeSSRNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freessrnode.github.io/news/article-105559.htm" />
    <meta property="og:site_name" content="FreeSSRNode免费节点官网" />
    <meta property="og:title" content="在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala" />
    <meta property="og:image" content="https://freessrnode.github.io/uploads/20240813/869772f94342123d22f3bf1d5193e034.webp" />
        <meta property="og:release_date" content="2025-04-27T08:29:30" />
    <meta property="og:updated_time" content="2025-04-27T08:29:30" />
        <meta property="og:description" content="在python中连接hive和impala有很多中方式，有pyhive,impyla,pyspark,ibis等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerber" />
        
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Muli:300,400,700,900" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap-datepicker.css">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/aos.css">
    <link href="/assets/website/css/freessrnode/jquery.mb.YTPlayer.min.css" media="all" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2KPLB94DVG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-2KPLB94DVG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300" data-page="detail">
    <div class="site-wrap">
                <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <div class="py-2 bg-light">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-9 d-none d-lg-block">
                        
                    </div>
                </div>
            </div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="d-flex align-items-center">
                    <div class="site-logo">
                        <a href="/" class="d-block">
                                                <span>Free SSR Node</span>
                                                </a>
                    </div>
                    <div class="mr-auto">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block">
                                                                <li>
                                    <a href="/" class="nav-link text-left">首页</a>
                                </li>
                                                                <li>
                                    <a href="/free-nodes/" class="nav-link text-left">免费节点</a>
                                </li>
                                                                <li>
                                    <a href="/paid-subscribe/" class="nav-link text-left">推荐机场</a>
                                </li>
                                                                <li>
                                    <a href="/client.htm" class="nav-link text-left">客户端</a>
                                </li>
                                                                <li>
                                    <a href="/news/" class="nav-link text-left">新闻资讯</a>
                                </li>
                                                            </ul>
                        </nav>
                    </div>
                    <div class="ml-auto">
                        <div class="social-wrap">
                            <a href="#"><span class="icon-facebook"></span></a>
                            <a href="#"><span class="icon-twitter"></span></a>
                            <a href="#"><span class="icon-linkedin"></span></a>
                            <a href="#" class="d-inline-block d-lg-none site-menu-toggle js-menu-toggle text-black"><span class="icon-menu h3"></span></a>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <div class="intro-section small" style="background-image: url('/assets/website/img/freessrnode/hero_1.jpg');">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-md-7 mx-auto text-center" data-aos="fade-up">
                        <div class="intro">
                            <h1>在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="site-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="SSR Windows免费节点订阅站" data-url="https://ssrwindows.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>在python中连接hive和impala有很多中方式，有<strong>pyhive,impyla,pyspark,ibis</strong>等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerberos认证。</p> </h1> <p>如果集群没开启kerberos认证则不需要这里的代码，或者在系统环境内通过kinit命令认证也不需要这部分的代码。</p> <p><strong>krbcontext.context_shell</strong></p> <pre><code class="language-python"># -*- coding: utf-8 -*-  __all__ = [ 'krbcontext', 'KRB5KinitError', ]  import os, sys # import pwd import subprocess   from contextlib import contextmanager  class KRB5KinitError(Exception):     pass  # def get_login(): #     ''' Get current effective user name ''' # #     return pwd.getpwuid(os.getuid()).pw_name  def init_ccache_as_regular_user(principal=None, ccache_file=None):     '''Initialize credential cache as a regular user      Return the filename of newly initialized credential cache     '''      if not sys.stdin.isatty():         raise IOError('This is not running on console. So, you need to run kinit '                       'with your principal manually before anything goes.')      cmd = 'kinit %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = '-c %s' % ccache_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file    def init_ccache_with_keytab(principal, keytab_file, ccache_file):     '''Initialize credential cache using keytab file      Return the filename of newly initialized credential cache     '''     cmd = 'kinit -kt %(keytab_file)s -c %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = ccache_file     args['keytab_file'] = keytab_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file   @contextmanager def krbcontext(using_keytab=False, **kwargs):     '''A context manager for Kerberos-related actions      using_keytab: specify to use Keytab file in Kerberos context if True,                   or be as a regular user.     kwargs: contains the necessary arguments used in kerberos context.             It can contain principal, keytab_file, ccache_file.             When you want to use Keytab file, keytab_file must be included.     '''      env_name = 'KRB5CCNAME'     old_ccache = os.getenv(env_name)     if using_keytab:         ccache_file = init_ccache_with_keytab(**kwargs)     else:         ccache_file = init_ccache_as_regular_user(kwargs.get("principal"), kwargs.get("ccache_file"))     os.environ[env_name] = ccache_file     yield </code></pre> </h1> <p>使用pyhive连接hive</p> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.3.0  # 如果使用ibis或impyla需要thrift_sasl==0.2.1  thrift==0.13.0  thriftpy==0.3.5  """  from pyhive import sqlalchemy_hive,hive from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>两种方式，一种是在系统环境内让当前用户通过kinit 先保持kerberos的认证，那所有的代码里就无需再写kerberos认证代码了。另一种方式，在python脚本内使用下面的代码进入kerberos认证会话：</p> <pre><code class="language-python">config = {     "kerberos_principal": "hive@CSDNTEST.COM.LOCAL",     "keytab_file": '/home/tools/wyk/keytab/hive.keytab',       "kerberos_ccache_file": '/home/tools/wyk/keytab/hive_ccache_uid',     "AUTH_MECHANISM": "GSSAPI" } with krbcontext(using_keytab=True,                                principal=config['kerberos_principal'],                                keytab_file=config['keytab_file'],                                ccache_file=config['kerberos_ccache_file']):     #在这个代码块内执行的脚本都是在kerberos认证内的。     #可在此代码块内查询hdfs hive hbase等等只要是kerberos principal有权限的组件都可以</code></pre> <h3>使用</h3> <p>下面的代码需要在上面的kerberos代码块内才能通过kerberos认证，如果集群没有开启kerberos认证或当期系统已使用kinit进行了认证则无需上面的代码：</p> <pre><code>con = hive.connect(host='uatnd02.csdntest.com.local',port=10000,auth='KERBEROS',kerberos_service_name="hive") #host为hiveserver2所在节点，port默认10000，为hs2的端口     cursor = con.cursor()     cursor.execute('select * from dl_nccp.account limit 5') #不能有分号！     # cursor.execute('desc dl_nccp.account') #不能有分号！     datas = cursor.fetchall()     print(datas)     cursor.close()     con.close()</code></pre> <p>&nbsp;</p> </h1> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """  from impala.dbapi import connect from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <pre><code class="language-python">#impyla  thrift==0.2.1  与ibis依赖版本相同，可同时使用     conn = connect(host='uatnd02.csdntest.com.local', port=10000, auth_mechanism='GSSAPI',kerberos_service_name='hive')     cur = conn.cursor()     cur.execute('SHOW databases') #不能有分号     cur.table_exists(table_name='account',database_name='dl_nccp') #return True or False     cur.ping() #return True or False     cur.status() #return True or False     cur.get_table_schema(table_name='account',database_name='dl_nccp') #return 表结构 类似desc     print(cur.fetchall())     cur.close()     conn.close()</code></pre> <p><img fetchpriority="high" decoding="async" alt="" height="271" src="http://img.555519.xyz/uploads/20221228/72a862ca43641590666eaeb2a04e5bc8.jpg"></p> </h1> <p>ibis是个很强大的第三方环境包，支持对各类数据库或文件系统进行访问，功能强大，并返回pandas dataframe格式，对数据开发人员很友好，这个包我用了两年多，非常<strong><span style="color:#86ca5e;">推荐</span></strong>。</p> <p>官方文档：https://docs.ibis-project.org/getting-started.html</p> <h3>环境</h3> <pre><code class="language-python"> """  ibis-framework==0.14.0  #pip install ibis-framework[impala]==0.14.0  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>官方文档以及源码里还有很多函数可供使用，这里仅列出常用的一些，建议使用ibis包的可以看看源码或官方文档。</p> <pre><code class="language-python">import ibis import pandas as pd import ibis.expr.datatypes as dt conf={ "impala_host":"uathd01.csdntest.com.local", "impala_port":21050, "kerberos_service_name":"impala", "auth_mechanism":"GSSAPI", "webhdfs_host1":"uatnd01.csdntest.com.local", "webhdfs_host2":"uatnd02.csdntest.com.local", "webhdfs_port":9870   #如果是hadoop3之前的版本这里的参数改为50070 } #获取hdfs连接 try:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host2"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)     hdfs_client.ls('/') except:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host1"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)  #获取impala连接 impala_client = ibis.impala.connect(host=conf["impala_host"], port=conf["impala_port"], hdfs_client = hdfs_client, auth_mechanism=conf["auth_mechanism"], timeout = 300)  # 直接读表，select * from dh_sales.r_order limit 10，返回pandas dataframe res = impala_client.table('r_order', database='dh_sales').execute(limit=10) print(type(res)) print(res.dtypes) print(res)  #使用SQL查询impala res = impala_client.sql("""select area,is_oversea,dw_ins_ts,sum(gid_cnt) from dh_t3_report_crm.r_duration_area_metr where is_oversea=0 group by 1,2,3 limit 5""") df_res = res.execute() print(df_res)  #列库下所有表 impala_client.list_tables(database='dl_common')  #使用pandas dataframe建表，类型自动映射 impala_client.create_table(table_name='ibis_create0602',obj=sys_dict,database='default',force=True) ... #pd_res_acc 略 #pd_res_cre 略 ... #使用pandas datraframe插入数据 impala_client.insert(table_name='tmp_account',obj=pd_res_acc,database='default',overwrite=True) impala_client.insert(table_name='ibis_create',obj=pd_res_cre,database='default',overwrite=True)</code></pre> <p><img decoding="async" alt="" height="681" src="http://img.555519.xyz/uploads/20221228/761baff5d40daf80716316d5edd6721b.jpg"></p> <p><img decoding="async" alt="" height="90" src="http://img.555519.xyz/uploads/20221228/8cfa2f3a8afd6e8b8e4a18beb8c0fd48.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="39" src="http://img.555519.xyz/uploads/20221228/4e022e96eaee72cb7f3327df0a74f6b7.jpg"></p> <h3>BUG解决</h3> <p>执行insert或create命令可能会报下面的错误，这个是源码级别的BUG，参考下面的连接修改源码即可解决：</p> <pre><code>UnicodeEncodeError: 'latin-1' codec can't encode characters in position 160-161: ordinal not in range(256)</code></pre> <p><img loading="lazy" decoding="async" alt="" height="710" src="http://img.555519.xyz/uploads/20221228/efb3d6edd2e109e83b51df5bceb810d1.jpg"></p> <p>参考：https://github.com/ibis-project/ibis/issues/2120</p> <p><span style="color:#86ca5e;"><em>vim&nbsp;/home/tools/python3/<strong>Python-3.6.8/lib/python3.6/site-packages/hdfs/client.py&nbsp;</strong></em></span></p> <p><img loading="lazy" decoding="async" alt="" height="169" src="http://img.555519.xyz/uploads/20221228/cc08cf49f942f6b0f83acacb6c82ea30.jpg"></p> </h1> <h3>环境</h3> <p><span style="color:#86ca5e;"><em>vim /etc/profile</em></span></p> <pre><code>export SPARK_HOME=/opt/cloudera/parcels/CDH/lib/spark export SPARK_CONF_DIR=$SPARK_HOME/conf export PYTHONPATH=/home/tools/anaconda3/envs/csdn/bin export PYSPARK_PYTHON=/home/tools/anaconda3/envs/csdn/bin/python3.6</code></pre> <pre><code class="language-python">""" pyspark==2.4.5 """</code></pre> <h3>kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>使用pyspark连接hive进行查询，并将spark dataframe转为pandas dataframe：</p> <pre><code class="language-python">from __future__ import division #import findspark as fs #fs.init() import pandas as pd from pyspark.sql import HiveContext,SparkSession,SQLContext from pyspark import SparkContext, SparkConf import pyspark.sql.functions as F import datetime as dt from datetime import datetime import random import numpy as np from log3 import log_to_file, log from pyspark.sql.types import *  conf = SparkConf().setMaster("yarn").setAppName("MF_return_calc") sc = SparkContext(conf=conf) sc.setLogLevel("WARN") hiveCtx = HiveContext(sc) spark = SparkSession.builder.master("yarn").appName("MF_return_calc").config("spark.debug.maxToStringFields", "100").getOrCreate()  #执行SQL test_sql = """select * from dl_nccp.account limit 5""" res = hiveCtx.sql(test_sql) type(res) #返回spark dataframe res.head(3) res_pd = res.toPandas() #将spark dataframe转为pandas dataframe res_pd</code></pre> <p><img loading="lazy" decoding="async" alt="" height="665" src="http://img.555519.xyz/uploads/20221228/ed029127ed79ff279d7196947174d608.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="251" src="http://img.555519.xyz/uploads/20221228/b92e4ec433f6d85624ccad6958e62271.jpg"></p> <p>&nbsp;</p> <p>好了上面四种在python中访问hive和impala的方式就介绍完了，希望对大家有帮助，谢谢！</p> <p>希望本文对你有帮助，请点个赞鼓励一下作者吧~ 谢谢！</p> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104876.htm">动物医院的设计,接诊流程,仪器设备有哪些（动物医院诊疗管理系统）</a></p>
                                        <p>下一个：<a href="/news/article-105562.htm">重庆宠物领养平台官网电话（重庆宠物领养重庆宠物赠送）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-84757.htm" title="办理宠物医院诊疗许可证（办理宠物医院审批动物诊疗许可证）">办理宠物医院诊疗许可证（办理宠物医院审批动物诊疗许可证）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-hiddify-next-node.htm" title="「4月4日」最高速度20.5M/S，2025年SSR/Shadowrocket/V2ray/Clash每天更新免费机场订阅节点链接">「4月4日」最高速度20.5M/S，2025年SSR/Shadowrocket/V2ray/Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-86912.htm" title="Spring中的Ant路径匹配工具组件AntPathMatcher">Spring中的Ant路径匹配工具组件AntPathMatcher</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-node-share.htm" title="「3月3日」最高速度21.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅节点链接">「3月3日」最高速度21.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-75731.htm" title="SpringCloud 服务调用监控 Hystrix Dashboard、Turbine">SpringCloud 服务调用监控 Hystrix Dashboard、Turbine</a></li>
                        <li class="py-2"><a href="/news/article-75065.htm" title="使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格">使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格</a></li>
                        <li class="py-2"><a href="/news/article-79849.htm" title="兽药疫苗冷藏室温度（兽用疫苗冷藏温度）">兽药疫苗冷藏室温度（兽用疫苗冷藏温度）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-24-hiddify-next-node.htm" title="「4月24日」最高速度22.1M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅节点链接">「4月24日」最高速度22.1M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-85475.htm" title="动物疫苗批号查询官网网址（动物疫苗批号查询官网网址）">动物疫苗批号查询官网网址（动物疫苗批号查询官网网址）</a></li>
                        <li class="py-2"><a href="/news/article-98010.htm" title="上海宠物领养站点地址查询（上海宠物领养站点地址查询电话）">上海宠物领养站点地址查询（上海宠物领养站点地址查询电话）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">86</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <div class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="copyright">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">FreeSSRNode免费节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
      <!-- loader -->
      <div id="loader" class="show fullscreen">
          <svg class="circular" width="48px" height="48px">
              <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
              <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#51be78" />
          </svg>
      </div>
      <script src="/assets/website/js/frontend/freessrnode/jquery-3.5.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-migrate-3.0.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-ui.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/popper.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/owl.carousel.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.stellar.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.countdown.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap-datepicker.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.easing.1.3.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/aos.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.fancybox.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.sticky.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.mb.YTPlayer.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/main.js"></script>
      <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
      <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- .site-wrap -->
</body>

</html>