<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freessrnode.github.io/news/article-111557.htm" />
    <title>比较爽的导航查询 功能  .NET ORM  / SqlSugar</title>
        <meta name="description" content=".NET ORM 新概念导航 今天这篇文章分享一款好用简单的ORM框架 SqlSugar ，相比 EF Core的导航查询 更加简单 ，配置更加容易，几分钟就能上手 1、导航查询特点 作用：主要处理主" />
        <link rel="icon" href="/assets/website/img/freessrnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeSSRNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freessrnode.github.io/news/article-111557.htm" />
    <meta property="og:site_name" content="FreeSSRNode免费节点官网" />
    <meta property="og:title" content="比较爽的导航查询 功能  .NET ORM  / SqlSugar" />
    <meta property="og:image" content="https://freessrnode.github.io/uploads/20240813/23a04e7621949e81203f483da5121050.webp" />
        <meta property="og:release_date" content="2025-05-04T09:28:49" />
    <meta property="og:updated_time" content="2025-05-04T09:28:49" />
        <meta property="og:description" content=".NET ORM 新概念导航 今天这篇文章分享一款好用简单的ORM框架 SqlSugar ，相比 EF Core的导航查询 更加简单 ，配置更加容易，几分钟就能上手 1、导航查询特点 作用：主要处理主" />
        
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="比较爽的导航查询 功能  .NET ORM  / SqlSugar">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Muli:300,400,700,900" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/bootstrap-datepicker.css">
    <link rel="stylesheet" href="/assets/website/fonts/freessrnode/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/aos.css">
    <link href="/assets/website/css/freessrnode/jquery.mb.YTPlayer.min.css" media="all" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="/assets/website/css/freessrnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2KPLB94DVG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-2KPLB94DVG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300" data-page="detail">
    <div class="site-wrap">
                <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <div class="py-2 bg-light">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-9 d-none d-lg-block">
                        
                    </div>
                </div>
            </div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="d-flex align-items-center">
                    <div class="site-logo">
                        <a href="/" class="d-block">
                                                <span>Free SSR Node</span>
                                                </a>
                    </div>
                    <div class="mr-auto">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block">
                                                                <li>
                                    <a href="/" class="nav-link text-left">首页</a>
                                </li>
                                                                <li>
                                    <a href="/free-nodes/" class="nav-link text-left">免费节点</a>
                                </li>
                                                                <li>
                                    <a href="/paid-subscribe/" class="nav-link text-left">推荐机场</a>
                                </li>
                                                                <li>
                                    <a href="/client.htm" class="nav-link text-left">客户端</a>
                                </li>
                                                                <li>
                                    <a href="/news/" class="nav-link text-left">新闻资讯</a>
                                </li>
                                                            </ul>
                        </nav>
                    </div>
                    <div class="ml-auto">
                        <div class="social-wrap">
                            <a href="#"><span class="icon-facebook"></span></a>
                            <a href="#"><span class="icon-twitter"></span></a>
                            <a href="#"><span class="icon-linkedin"></span></a>
                            <a href="#" class="d-inline-block d-lg-none site-menu-toggle js-menu-toggle text-black"><span class="icon-menu h3"></span></a>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <div class="intro-section small" style="background-image: url('/assets/website/img/freessrnode/hero_1.jpg');">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-md-7 mx-auto text-center" data-aos="fade-up">
                        <div class="intro">
                            <h1>比较爽的导航查询 功能  .NET ORM  / SqlSugar</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="site-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="SSR Windows免费节点订阅站" data-url="https://ssrwindows.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<h2>.NET ORM 新概念导航</h2> <p>今天这篇文章分享一款好用简单的ORM框架 SqlSugar ，相比 EF Core的导航查询 更加简单 ，配置更加容易，几分钟就能上手</p> <h2 id="blogTitle0">1、导航查询特点</h2> <p>作用：主要处理主对象里面有子对象这种层级关系查询</p> <h3 id="blogTitle1">1.1 无外键开箱就用</h3> <p>其它ORM导航查询 需要 各种配置或者外键，而SqlSugar则开箱就用，无外键，只需配置特性和主键就能使用</p> <h3 id="blogTitle2">1.2 高性能优</h3> <p>&nbsp;查询 性能非常强悍</p> <p>&nbsp;支持大数据分页导航查询</p> <h3 id="blogTitle3">3.3 语法超级爽</h3> <p>注意：多级查询时VS有时候没提示直接写就行了 ，相比 其他 .NET ORM语法要简单的多</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> var list=db.Queryable&lt;Test&gt;()            .Includes(x =&gt; x.Provinces,x=&gt;x.Citys ,x=&gt;x.Street)//多级查询 有时候VS没提示手写             .Includes(x =&gt; x.ClassInfo)// 一级查询            .ToList();                                      var list=db.Queryable&lt;Test&gt;()         //多级查询  加排序过滤         .Includes(x =&gt;x.Provinces.Where(z=&gt;z.Id&gt;0).OrderBy(z=&gt;z.Id).ToList(),x=&gt;x.Citys,x=&gt;x.Street)          // 一级查询         .Includes(x =&gt;x.ClassInfo)         .ToList();</pre> </div> <h2>2、新导航查询 ORM</h2> <p>适合有主键的常规操作, 请升级到5.0.6.8</p> <h3 id="blogTitle5">2.1 一对一</h3> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">实体</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> StudentA         {             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true, IsIdentity = true</span><span style="color: rgba(0, 0, 0, 1)">)]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> StudentId {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">string</span> Name {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> SchoolId {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }             [Navigate(NavigateType.OneToOne, nameof(SchoolId))]</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">一对一</span><span style="color: rgba(0, 0, 255, 1)">public</span> SchoolA SchoolA {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }            }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> SchoolA         {             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true, IsIdentity = true</span><span style="color: rgba(0, 0, 0, 1)">)]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> SchoolId {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">string</span> SchoolName {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }          }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">代码</span><span style="color: rgba(0, 0, 255, 1)">var</span> list2 = db.Queryable&lt;StudentA&gt;<span style="color: rgba(0, 0, 0, 1)">()            .Includes(x</span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> x.SchoolA)            .Where(x</span>=&gt; x.SchoolA.SchoolName ==<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">北大</span><span style="color: rgba(128, 0, 0, 1)">"</span>)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">可以对一级导航进行过滤</span>            .ToList();</pre> </div> <h3>2.2 一对多</h3> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">    public class StudentA     {      [SugarColumn(IsPrimaryKey = true, IsIdentity = true)]      public int StudentId { get; set; }      public string Name { get; set; }      public int SchoolId { get; set; }      [Navigate(NavigateType.OneToMany, nameof(BookA.studenId))]      public List&lt;BookA&gt; Books { get; set; }        }     public class BookA     {        [SugarColumn(IsPrimaryKey = true, IsIdentity = true)]        public int BookId { get; set; }       public string Name { get; set; }       public int studenId { get; set; }     }               //例1: 简单用法     var list = db.Queryable&lt;StudentA&gt;()     .Includes(x =&gt; x.Books)     .ToList();           //例2:支持Any和Count 对主表进行过滤     var list = db.Queryable&lt;StudentA&gt;()     .Includes(x =&gt; x.Books)      .Where(x=&gt;x.Books.Any(z=&gt;z.BookId==1))     .ToList();           //例3:对子对象进行排序和过滤      var list = db.Queryable&lt;StudentA&gt;()        .Includes(x =&gt; x.Books.Where(y=&gt;y.BookId &gt;0).OrderBy(y=&gt;y.BookId ).ToList())         .ToList();</pre> </div> <h3 id="blogTitle7">2.3 多对多</h3> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">多对多</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> ABMapping1        {             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)"> )]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> AId {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">)]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> BId {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> A1         {             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true, IsIdentity = true</span><span style="color: rgba(0, 0, 0, 1)">  )]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> Id {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">string</span> Name {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }             [Navigate(</span><span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(ABMapping1),nameof(ABMapping1.AId),nameof(ABMapping1.BId))]</span><span style="color: rgba(0, 0, 255, 1)">public</span> List&lt;B1&gt; BList {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> B1         {             [SugarColumn(IsPrimaryKey</span>=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)"> , IsIdentity = true)]</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">int</span> Id {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">string</span> Name {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }             [Navigate(</span><span style="color: rgba(0, 0, 255, 1)">typeof</span><span style="color: rgba(0, 0, 0, 1)">(ABMapping1), nameof(ABMapping1.BId), nameof(ABMapping1.AId))]</span><span style="color: rgba(0, 0, 255, 1)">public</span> List&lt;A1&gt; AList {<span style="color: rgba(0, 0, 255, 1)">get</span>;<span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }         }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">例1:简单用法</span><span style="color: rgba(0, 0, 255, 1)">var</span> list3= db.Queryable&lt;A1&gt;().Includes(x =&gt;<span style="color: rgba(0, 0, 0, 1)"> x.BList).ToList();</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">例2:支持子对象排序和过滤</span><span style="color: rgba(0, 0, 255, 1)">var</span> list3= db.Queryable&lt;A1&gt;().Includes(x =&gt; x.BList.Where(z=&gt;z.Id&gt;<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">).ToList()).ToList();</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">例3:支持主表过滤  Any和Count</span><span style="color: rgba(0, 0, 255, 1)">var</span> list3= db.Queryable&lt;A1&gt;().Includes(x =&gt;<span style="color: rgba(0, 0, 0, 1)"> x.BList)                              .Where(x</span>=&gt;x.BList .Any(z=&gt;z.Id ==<span style="color: rgba(128, 0, 128, 1)">1</span>)).ToList();</pre> </div> <h3>2.4 多级查询</h3> <p id="blogTitle8">配置好实体类，我们可以多级查询 ，.NET 中轻松多级查询</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> var list=db.Queryable&lt;Test&gt;()                 .Includes(x =&gt; x.Provinces,x=&gt;x.Citys ,x=&gt;x.Street)//有时候没提示 直接写                 .Includes(x =&gt; x.ClassInfo)// 一级查询                 .ToList();</pre> </div> <h3><span style="font-size: 1.17em">2.5 大数据分页导航</span></h3> <p>适合一次性查询1000条以上的导航</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">  var list = new List&lt;Tree1&gt;();       db.Queryable&lt;Tree1&gt;()         .Includes(it =&gt; it.Child)         .ForEach(it =&gt; list.Add(it), 300); //每次查询300条</pre> </div> <p>&nbsp;更多用法：https://www.donet5.com/Home/Doc?typeId=2414</p> <h2 id="blogTitle10">3、ORM无配置映射（高性能）</h2> <p>适合没有主键或者复杂的一些操作</p> <h3 id="blogTitle11">&nbsp;3.1 无配置映射实现二层</h3> <p>结构:&nbsp; Student-&gt;SchoolA</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">var list = db.Queryable&lt;StudentA&gt;().ToList(); db.ThenMapper(list, stu =&gt; {   //如果加Where不能带有stu参数，stu参数写到 SetContext   stu.SchoolA=db.Queryable&lt;SchoolA&gt;().SetContext(scl=&gt;scl.SchoolId,()=&gt;stu.SchoolId,stu).FirstOrDefault(); }); // SetContext不会生成循环操作，高性能  和直接Where性能是不一样的</pre> </div> <p><span style="font-size: 1.17em">如果没有SetContext那么这个查询将会循环</span></p> <h3><span style="font-size: 1.17em">3.2&nbsp; 无配置映射无限级</span></h3> <p>了解原理后我们用ThenMapper想映射哪层就映射哪层</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">var treeRoot=db.Queryable&lt;Tree&gt;().Where(it =&gt; it.Id == 1).ToList(); //第一层 db.ThenMapper(treeRoot, item =&gt; {     item.Child = db.Queryable&lt;Tree&gt;().SetContext(x =&gt; x.ParentId, () =&gt; item.Id, item).ToList(); }); //第二层 db.ThenMapper(treeRoot.SelectMany(it=&gt;it.Child), it =&gt; {     it.Child = db.Queryable&lt;Tree&gt;().SetContext(x =&gt; x.ParentId, () =&gt; it.Id, it).ToList(); }); //第三层 db.ThenMapper(treeRoot.SelectMany(it =&gt; it.Child).SelectMany(it=&gt;it.Child), it =&gt; {     it.Child = db.Queryable&lt;Tree&gt;().SetContext(x =&gt; x.ParentId, () =&gt; it.Id, it).ToList(); }); //这儿只是用树型结构来证明可以实现无限级别导航查询 ,实际开发中树型结构用ToTree实现 public class Tree { [SqlSugar.SugarColumn(IsPrimaryKey =true)] public int Id { get; set; } public string Name { get; set; } public int ParentId { get; set; } [SqlSugar.SugarColumn(IsIgnore = true)] public Tree Parent { get; set; } [SqlSugar.SugarColumn(IsIgnore = true)] public List&lt;Tree&gt; Child { get; set; } } // SetContext不会生成循环操作，高性能  和直接Where性能是不一样的</pre> </div> <h2></h2> <h2>4 、.NET ORM 未来计划</h2> <p>Json to sql&nbsp; 正在开发中 ，未来将打造一套直接由前端操作数据库的API</p> <div class="cnblogs_Highlighter"> <pre class="brush:javascript;gutter:true;"> {  "Queryable":"order",   Select:[ [{SqlFunc_AggregateMin:["id"]},"id"], [{SqlFunc_GetDate:[]},"Date"] ]  }</pre> </div> <p>将支持 权限过滤 ，验证，多表查询，层级导航查询 等</p> <h2>GitHUB 源码：</h2> <p>https://github.com/donet5/SqlSugar</p> <p>喜欢的可以点个星星、点个关注</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-110745.htm">国产香水里,哪些品牌值得推荐呢(国产香水里,哪些品牌值得推荐用)</a></p>
                                        <p>下一个：<a href="/news/article-111558.htm">学宠物医生报考哪个学校专科（学宠物医生报考哪个学校专科比较好）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-88359.htm" title="我想开一家宠物店大概需要多少钱?（开一个宠物店大概要多少钱）">我想开一家宠物店大概需要多少钱?（开一个宠物店大概要多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-101637.htm" title="宠物领养要钱吗知乎（领养宠物要花钱吗）">宠物领养要钱吗知乎（领养宠物要花钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-1-hiddify-next-node.htm" title="「5月1日」最高速度21.7M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅节点链接">「5月1日」最高速度21.7M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-89812.htm" title="动物防疫（动物防疫条件合格证有效期多久）">动物防疫（动物防疫条件合格证有效期多久）</a></li>
                        <li class="py-2"><a href="/news/article-109861.htm" title="2020年春季动物防疫工作总结（春季动物防疫工作汇报）">2020年春季动物防疫工作总结（春季动物防疫工作汇报）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-24-hiddify-next-node.htm" title="「4月24日」最高速度22.1M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅节点链接">「4月24日」最高速度22.1M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-111558.htm" title="学宠物医生报考哪个学校专科（学宠物医生报考哪个学校专科比较好）">学宠物医生报考哪个学校专科（学宠物医生报考哪个学校专科比较好）</a></li>
                        <li class="py-2"><a href="/news/article-88360.htm" title="新手开店适合开什么店门面好（新手开店适合开什么店门面好呢）">新手开店适合开什么店门面好（新手开店适合开什么店门面好呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-13-free-hiddify-next-node.htm" title="「4月13日」最高速度20.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费机场订阅节点链接">「4月13日」最高速度20.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-4-free-node-subscribe.htm" title="「5月4日」最高速度18.8M/S，2025年SSR/V2ray/Clash/Shadowrocket每天更新免费机场订阅节点链接">「5月4日」最高速度18.8M/S，2025年SSR/V2ray/Clash/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <div class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="copyright">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">FreeSSRNode免费节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
      <!-- loader -->
      <div id="loader" class="show fullscreen">
          <svg class="circular" width="48px" height="48px">
              <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
              <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#51be78" />
          </svg>
      </div>
      <script src="/assets/website/js/frontend/freessrnode/jquery-3.5.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-migrate-3.0.1.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery-ui.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/popper.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/owl.carousel.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.stellar.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.countdown.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/bootstrap-datepicker.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.easing.1.3.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/aos.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.fancybox.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.sticky.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/jquery.mb.YTPlayer.min.js"></script>
      <script src="/assets/website/js/frontend/freessrnode/main.js"></script>
      <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
      <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- .site-wrap -->
</body>

</html>